<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <script src="https://cdn.tailwindcss.com"></script>
</head>
<body class="bg-gray-100 flex flex-col min-h-screen">

    <!-- Шапка сайта -->
    <header class="bg-blue-500 text-white p-4 flex justify-between items-center">
        <h1 class="text-2xl font-semibold">Дневник питания</h1>
        <nav>
            <ul class="flex space-x-4">
                <li><a href="/" class="hover:underline">Главная</a></li>
                <li><a href="/FoodCul/Result" class="hover:underline">Результаты по дням</a></li>
                <li><a href="/FoodCul/Crafting" class="hover:underline">Создание блюда</a></li>
            </ul>
        </nav>
    </header>

    <!-- Основной контент -->
    <div class="container mx-auto flex-grow flex p-4">
        <main class="flex-grow">
            @if (ViewContext.RouteData.Values["Action"]?.ToString() == "Index")
            {
                <div class="text-center mb-6">
                    <h1 class="text-2xl font-bold mb-4">Добро пожаловать в Дневник питания!</h1>
                    <p>Здесь будет основное содержимое сайта.</p>
                </div>

                <div class="flex justify-center mb-6">
                    <img src="~/foto.jpg" alt="Пирамида питания" class="w-2/3 max-w-2xl h-auto rounded-lg shadow-lg">
                </div>
            }

            @RenderBody()
        </main>

        <!-- Боковое меню (если оно есть) -->
        @RenderSection("Sidebar", required: false)
    </div>

    <!-- Футер -->
    <footer class="bg-gray-800 text-white text-center p-4 mt-auto">
        © 2025 Дневник питания
    </footer>


    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            let form = document.getElementById("addProductForm");
            if (form) {
                form.addEventListener("submit", async function (event) {
                    event.preventDefault(); // Останавливаем стандартное поведение формы

                    let formData = new FormData(this);

                    let response = await fetch("/FoodCul/Create", {
                        method: "POST",
                        body: formData
                    });

                    if (!response.ok) {
                        Swal.fire({
                            icon: "error",
                            title: "Ошибка сети!",
                            text: "Не удалось отправить данные",
                            confirmButtonText: "Окей"
                        });
                        return;
                    }

                    let data = await response.json();

                    if (data.statusCode === 1) {
                        Swal.fire({
                            icon: "error",
                            title: "Ошибка!",
                            text: data.description,
                            confirmButtonText: "Окей"
                        });
                    } else if (data.statusCode === 0) {
                        Swal.fire({
                            icon: "success",
                            title: "Успешно!",
                            text: data.description,
                            confirmButtonText: "Отлично!"
                        }).then(() => {
                            location.reload();
                        });
                    } else {
                        Swal.fire({
                            icon: "warning",
                            title: "Ошибка!",
                            text: "Произошла неизвестная ошибка",
                            confirmButtonText: "Окей"
                        });
                    }
                });
            }
        });
    </script>

</body>
</html>
